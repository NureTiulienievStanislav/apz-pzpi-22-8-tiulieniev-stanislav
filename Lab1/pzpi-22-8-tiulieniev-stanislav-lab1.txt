Міністерство освіти та науки України Харківський національний університет радіоелектроніки


Кафедра ПІ


Звіт
З лабораторної роботи 1
з дисципліни «Архітектура програмного забезпечення»
на тему: «Vision & Scope»




Виконав:	Перевірив:
ст. гр. ПЗПІ-22-8	ст. викладач Сокорчук І.П.
Тюлєнєв С.О.	 



Харків 2025
 
Мета роботи:
Підготувати детальний опис проєкту у форматі Vision & Scope для програмної системи керування автопарком «TrackWay».
Хід роботи:
Перший розділ описує актуальність проблем, які вирішує TrackWay, зокрема потребу в реальному моніторингу стану та обслуговування автопарку. Другий розділ окреслює призначення системи та її ключові можливості, такі як відстеження місцезнаходження, оповіщення про несправності і планування маршрутів. Третій розділ деталізує функціонал кожного компонента: веб-інтерфейс для диспетчерів, мобільний застосунок для водіїв і IoT-платформу для збору телеметрії. У четвертому розділі перераховуються технології, які будуть використані — від протоколів зв’язку і баз даних до фронтенд- та бекенд-фреймворків.
Висновки:
У результаті виконання лабораторної роботи було розроблено детальний документ у форматі Vision & Scope для системи керування автопарком TrackWay. Метою цієї роботи стало формулювання єдиного бачення проєкту, визначення його бізнес-цілей, функціональних можливостей, обмежень та основних етапів реалізації. Документ охоплює бізнес-вимоги, концепцію рішення, межі та виключення з обсягу проєкту. Система TrackWay забезпечує моніторинг місцезнаходження та технічного стану транспортних засобів у реальному часі за допомогою IoT-сенсорів, а також надає веб- та мобільні інтерфейси для диспетчерів і водіїв.
 
ДОДАТОК А
Посилання на відеозапис доповіді

Відеозапис доповіді на YouTube: https://youtu.be/x6Suz3TN3e4
Нижче наведено хронологічний опис доповіді.
00:00 – Вітання
00:19 – Мета
00:40 – Хід роботи. Опис розділів
01:28 – Vision & Scope – 1.Бізнес-вимоги
02:28 – Документ Vision & Scope – 2.Концепція рішення
03:35 – Документ Vision & Scope – 3.Рамки первинного випуску
07:40 – Документ Vision & Scope – 4.Бізнес-контекст
08:13 – Висновки. Підсумок виконаної роботи
08:30 – Завершення


ДОДАТОК Б
VISION & SCOPE DOCUMENT


Vision and Scope Document
for
< TrackWay>
Version 1.1 approved


Prepared by < Тюлєнєв С.О.>


<KHNURE>


<30.05.2025>
 
Table of Contents


Table of Contents	5
1.	Business Requirements.	5
1.1	Background	5
1.2	Business Opportunity	6
2	Vision of the Solution	6
2.1	Vision Statement	6
2.2	Major Features	7
3	Scope and Limitations	7
3.1	Scope of Initial Release	7
3.2	Scope of Subsequent Releases	9
4.	Business Context	10
4.1	Operating Environment	10



1.	Business Requirements.
1.1	 Background
Управління автопарком для логістичних компаній, служб доставки та постачальників послуг громадського транспорту є складним завданням через велику кількість транспортних засобів, різноманітні операційні потреби та необхідність координації в режимі реального часу. Оператори автопарків стикаються з такими проблемами, як неефективне планування маршрутів, несподівані простої транспортних засобів та погана комунікація між диспетчерами та водіями, що призводить до збільшення витрат та зниження ефективності. Система TrackWay вирішує ці проблеми, надаючи інтегровану платформу, яка поєднує телеметрію в режимі реального часу від датчиків IoT, веб-інтерфейс для диспетчерів та мобільний додаток для водіїв, що забезпечує безперебійний моніторинг, управління завданнями та оптимізацію операційної діяльності.
1.2	Business Opportunity
Багато існуючих рішень для управління автопарком, таких як Fleetio та Samsara, зосереджуються на конкретних функціях, таких як GPS-відстеження або планування технічного обслуговування, але не мають комплексної інтеграції або доступності для малих та середніх автопарків. TrackWay використовує цю прогалину, пропонуючи уніфіковану платформу, яка є одночасно масштабованою та економічно ефективною.
Fleetio: Забезпечує надійне відстеження та звітність щодо технічного обслуговування автопарку, але вимагає значних інвестицій, що обмежує доступність для невеликих автопарків. Також у ньому відсутні інструменти для безперебійної комунікації між водієм та диспетчером.
Samsara: Пропонує відстеження та аналіз GPS у реальному часі, але призначений для великих підприємств, має високу вартість та складний інтерфейс, що може бути занадто складним для невеликих операторів.
Переваги TrackWay: поєднує телеметрію в режимі реального часу, управління завданнями та зручні інтерфейси за нижчою вартістю, орієнтуючись на малі та середні автопарки. Підтримує партнерство з постачальниками обладнання IoT для інтегрованих сенсорних рішень та пропонує преміум-аналітику для великих автопарків, створюючи кілька джерел доходу за рахунок передплати та продажу обладнання.
Модель передплати TrackWay, з цінами від 50 до 200 доларів на автопарк на місяць, орієнтована на недооцінений сегмент ринку, а її інтуїтивно зрозумілий дизайн скорочує час навчання порівняно з конкурентами.


2	Vision of the Solution
2.1	Vision Statement
Система TrackWay призначена для оптимізації управління автопарком шляхом надання інтегрованої платформи для моніторингу транспортних засобів у режимі реального часу, ефективного розподілу завдань та прийняття рішень на основі даних. Вона дозволяє операторам автопарків оптимізувати роботу, зменшити витрати та підвищити безпеку за допомогою телеметрії на основі Інтернету речей, веб-інтерфейсу для диспетчерів та мобільного додатку для водіїв. Завдяки наданню практичних відомостей та автоматизованих сповіщень TrackWay спрощує адміністративні процеси та покращує координацію, забезпечуючи ефективне використання ресурсів автопарку.
2.2	Major Features
Функції для диспетчерів:
1.	Управління завданнями та маршрутами: розподіляйте завдання, плануйте оптимізовані маршрути та відстежуйте прогрес у режимі реального часу.
2.	Моніторинг автопарку: отримуйте доступ до телеметричних даних у режимі реального часу, включаючи місцезнаходження транспортних засобів, рівень палива та діагностику двигуна.
3.	Аналітична панель: перегляд звітів про ефективність використання палива, продуктивність водіїв та використання автопарку.
Функції для водіїв:
1.	 Оновлення завдань: отримання завдань та навігаційних інструкцій у режимі реального часу через мобільний додаток.
2.	Сповіщення про технічне обслуговування: отримання сповіщень про необхідність технічного обслуговування транспортного засобу, наприклад, про низький рівень палива або проблеми з шинами.
Інтеграція з IoT:
1.	Збір телеметричних даних: використовуйте датчики IoT для збору даних про місцезнаходження транспортного засобу, швидкість, паливо та діагностику.
2.	Передача даних у режимі реального часу: підтримка протоколу MQTT для зв'язку з бекендом з низькою затримкою.


3	Scope and Limitations

3.1	Scope of Initial Release
Функціональність бекенду: бекенд побудований з використанням Node.js та Express.js для створення RESTful API для обробки запитів клієнтів та пристроїв IoT. Дані зберігаються в MongoDB, управляються за допомогою Mongoose для структурованої обробки даних. Система підтримує операції CRUD для таких об'єктів, як користувачі (диспетчери та водії), транспортні засоби, датчики, завдання та сповіщення. Аутентифікація та авторизація реалізовані за допомогою токенів JWT, що забезпечує безпечний доступ. Протокол MQTT забезпечує обмін даними з пристроями IoT у режимі реального часу. Механізм резервного копіювання бази даних забезпечує надійність даних.
Функціональність IoT: пристрої IoT збирають телеметричні дані, включаючи місцезнаходження транспортного засобу, рівень палива, швидкість, температуру двигуна та діагностичні коди. Дані передаються до бекенду через MQTT, підтримуючи стандартні датчики, сумісні з поширеними моделями транспортних засобів.
Функціональність веб-клієнта: веб-інтерфейс, розроблений за допомогою React та Tailwind CSS, надає диспетчерам інструменти для призначення завдань, моніторингу транспортних засобів та перегляду аналітики за допомогою діаграм та таблиць. Він використовує Axios для HTTP-запитів до бекенду та включає адміністративні функції для управління обліковими записами користувачів та створення звітів.
Функціональність мобільного клієнта: додаток для Android, створений за допомогою Kotlin та XML, дозволяє водіям отримувати оновлення завдань, доступ до навігації та отримувати сповіщення про технічне обслуговування. Він підтримує push-повідомлення через Firebase Cloud Messaging та обмежене кешування в автономному режимі.
Функції для диспетчерів (веб-інтерфейс):
1.	Призначення завдань: диспетчери можуть створювати та призначати завдання (наприклад, доставки або забирання) водіям, вказуючи місце призначення, пріоритет та терміни виконання, використовуючи простий інтерфейс на основі форм.
2.	Відстеження транспортних засобів у реальному часі: перегляд місцезнаходження транспортних засобів на карті, що оновлюється кожні 5-10 секунд, з використанням даних GPS від датчиків IoT, з базовим інтерфейсом, що показує ідентифікатори та статуси транспортних засобів.
3.	Базова аналітична панель: відображення простих показників, таких як загальна пройдена відстань, витрата палива та рівень виконання завдань, у вигляді таблиць або гістограм, сформованих на основі телеметричних даних.
4.	Повідомлення про технічне обслуговування: отримання сповіщень про проблеми з транспортними засобами (наприклад, низький рівень палива, несправності двигуна) на основі заздалегідь визначених порогових значень, що відображаються у вигляді спливаючих повідомлень або списку сповіщень.
5.	Управління користувачами: додавайте, редагуйте або деактивуйте облікові записи водіїв з базовими призначеннями ролей (наприклад, диспетчер, водій) за допомогою простої панелі адміністратора.
Функції для водіїв (мобільний додаток):
1.	Перегляд завдань: водії можуть переглядати призначені завдання, включаючи адреси призначення та терміни виконання, у вигляді чіткого списку з доступом до деталей одним натисканням.
2.	Підтримка навігації: доступ до навігації до пунктів призначення завдань завдяки інтеграції із зовнішніми картографічними сервісами (наприклад, Google Maps API), що запускаються безпосередньо з додатка.
3.	Повідомлення про технічне обслуговування: отримання push-повідомлень про проблеми з транспортним засобом (наприклад, низький тиск у шинах, прострочене технічне обслуговування) з коротким описом та пропозиціями щодо дій.
4.	Оновлення статусу: Водії можуть позначати завдання як розпочаті, у процесі виконання або завершені одним натисканням кнопки, синхронізуючи оновлення з інтерфейсом диспетчера.
5.	Офлайн-кешування: Зберігайте останні завдання та сповіщення локально для доступу в районах із поганим інтернетом, синхронізуючи їх після відновлення з'єднання.
Інтеграція IoT:
1.	Збір телеметричних даних: Збирайте необхідні дані про транспортний засіб (місцезнаходження, рівень палива, швидкість, температура двигуна) за допомогою стандартних датчиків IoT, сумісних із поширеними моделями транспортних засобів.
2.	Передача даних у реальному часі: надсилайте телеметричні дані на сервер кожні 5–10 секунд за допомогою протоколу MQTT, використовуючи легкі модулі ESP32 для надійного зв'язку.
3.	Базова перевірка даних: відфільтруйте помилкові дані датчиків (наприклад, винятки, такі як неможливі швидкості), щоб забезпечити точність телеметрії перед обробкою.
3.2	Scope of Subsequent Releases
Покращення мобільного клієнта: Реєстрація та автентифікація користувачів буде спрощена за допомогою реєстрації за допомогою електронної пошти. Додаток підтримуватиме фільтрування завдань та сповіщень за пріоритетом або станом транспортного засобу та пропонуватиме багатомовну підтримку для ширшої доступності.
Вдосконалення веб-клієнта: Адміністратори можуть додавати, редагувати або видаляти транспортні засоби та призначати ролі користувачів. Інтерфейс дозволить налаштовувати права доступу для різних груп користувачів (наприклад, диспетчерів, водіїв) та надаватиме розширену аналітику щодо ефективності автопарку.
Вдосконалення IoT: Інтеграція з додатковими типами датчиків, такими як датчики тиску в шинах, та покращене фільтрування даних для підвищення точності телеметрії.
Інтеграція AI: майбутні версії будуть включати AI для прогнозного технічного обслуговування, аналізуючи дані телеметрії для прогнозування зносу компонентів. Алгоритми оптимізації маршруту мінімізують витрату палива, а виявлення аномалій буде ідентифікувати нерегулярну поведінку транспортного засобу, викликаючи миттєві сповіщення.

4.	Business Context

4.1	Operating Environment
Веб-розробка: HTML, CSS та JavaScript з React створюють інтерактивний веб-інтерфейс для диспетчерів. Node.js та Express.js забезпечують роботу бекенд-API, полегшуючи комунікацію з клієнтами та пристроями IoT.
Мобільна розробка: Kotlin та XML використовуються для розробки додатка для Android, забезпечуючи нативний, зручний для користувачів досвід для водіїв.
База даних: MongoDB зберігає дані телеметрії, користувачів та завдань, а Mongoose забезпечує ефективне управління та запити.
IoT: Стандартні датчики IoT (наприклад, GPS, OBD-II) збирають дані про транспортні засоби, які передаються через протокол MQTT за допомогою модулів ESP32 з підтримкою Wi-Fi для комунікації в режимі реального часу.
